{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fzare\\\\OneDrive\\\\Documents\\\\GitHub\\\\table\\\\my-app\\\\src\\\\BasicTable.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport SearchBar from \"material-ui-search-bar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BasicTable() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [rows, setRows] = useState([]);\n  //   const [page, setPage] = useState(0);\n  //   const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [collector, setCollector] = useState({\n    page: 0,\n    rowsPerPage: 5\n  });\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [displayedRows, setNewRows] = useState([]);\n  _s(useEffect(_s(() => {\n    _s();\n    useEffect(() => {\n      const getData = async () => {\n        const url = `https://api.instantwebtools.net/v1/passenger?page=${controller.page}&size=${controller.rowsPerPage}`;\n        try {\n          const response = await fetch(url);\n          if (response.statusText === \"OK\") {\n            const data = await response.json();\n            console.log(data);\n            setPassengersList(data.data);\n            setPassengersCount(data.totalPassengers);\n          } else {\n            throw new Error(\"Request failed\");\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      getData();\n    }, [controller]);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), []), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  //   const handleChangePage = (event: unknown, newPage: number) => {\n  //     setPage(newPage);\n  //   };\n\n  //   const handleChangeRowsPerPage = (\n  //     event: React.ChangeEvent<HTMLInputElement>\n  //   ) => {\n  //     setRowsPerPage(parseInt(event.target.value, 10));\n  //     setPage(0);\n  //   };\n\n  const handleSearch = searchedVal => {\n    setSearchQuery(searchedVal);\n    const filteredRows = rows.filter(row => row.name.toLowerCase().includes(searchedVal.toLowerCase()));\n    setNewRows(filteredRows);\n  };\n\n  //   const startIndex = page * rowsPerPage;\n  //   const endIndex = startIndex + rowsPerPage;\n  //   const emptyRows = rowsPerPage - displayedRows.length;\n  const handlePageChange = (event, newPage) => {\n    setController({\n      ...controller,\n      page: newPage\n    });\n  };\n  const handleChangeRowsPerPage = event => {\n    setController({\n      ...controller,\n      rowsPerPage: parseInt(event.target.value, 10),\n      page: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      value: searchQuery,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Trips\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: passengersList.map(passenger => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: passenger.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: passenger.trips\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, passenger._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      onPageChange: handlePageChange,\n      page: controller.page,\n      count: passengersCount,\n      rowsPerPage: controller.rowsPerPage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s2(BasicTable, \"CXlisHJSYG4N97DzrDbxA1O5NgA=\");\n_c = BasicTable;\nvar _c;\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["React","useEffect","useState","Table","TableBody","TableCell","TableHead","TableRow","Paper","TablePagination","SearchBar","jsxDEV","_jsxDEV","BasicTable","_s2","_s","$RefreshSig$","rows","setRows","collector","setCollector","page","rowsPerPage","searchQuery","setSearchQuery","displayedRows","setNewRows","getData","url","controller","response","fetch","statusText","data","json","console","log","setPassengersList","setPassengersCount","totalPassengers","Error","error","handleSearch","searchedVal","filteredRows","filter","row","name","toLowerCase","includes","handlePageChange","event","newPage","setController","handleChangeRowsPerPage","parseInt","target","value","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","passengersList","map","passenger","trips","_id","component","onPageChange","count","passengersCount","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["C:/Users/fzare/OneDrive/Documents/GitHub/table/my-app/src/BasicTable.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\n\r\ninterface Row {\r\n  name: string;\r\n  calories: number;\r\n  fat: number;\r\n  carbs: number;\r\n  protein: number;\r\n}\r\n\r\nexport function BasicTable() {\r\n  const [rows, setRows] = useState<Row[]>([]);\r\n  //   const [page, setPage] = useState(0);\r\n  //   const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [collector, setCollector] = useState<any>({\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n  });\r\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\r\n  const [displayedRows, setNewRows] = useState<Row[]>([]);\r\n\r\n  useEffect(() => {\r\n    useEffect(() => {\r\n      const getData = async () => {\r\n        const url = `https://api.instantwebtools.net/v1/passenger?page=${controller.page}&size=${controller.rowsPerPage}`;\r\n        try {\r\n          const response = await fetch(url);\r\n          if (response.statusText === \"OK\") {\r\n            const data = await response.json();\r\n            console.log(data);\r\n            setPassengersList(data.data);\r\n            setPassengersCount(data.totalPassengers);\r\n          } else {\r\n            throw new Error(\"Request failed\");\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      };\r\n      getData();\r\n    }, [controller]);\r\n  }, []);\r\n\r\n  //   const handleChangePage = (event: unknown, newPage: number) => {\r\n  //     setPage(newPage);\r\n  //   };\r\n\r\n  //   const handleChangeRowsPerPage = (\r\n  //     event: React.ChangeEvent<HTMLInputElement>\r\n  //   ) => {\r\n  //     setRowsPerPage(parseInt(event.target.value, 10));\r\n  //     setPage(0);\r\n  //   };\r\n\r\n  const handleSearch = (searchedVal: string) => {\r\n    setSearchQuery(searchedVal);\r\n    const filteredRows = rows.filter((row) =>\r\n      row.name.toLowerCase().includes(searchedVal.toLowerCase())\r\n    );\r\n    setNewRows(filteredRows);\r\n  };\r\n\r\n  //   const startIndex = page * rowsPerPage;\r\n  //   const endIndex = startIndex + rowsPerPage;\r\n  //   const emptyRows = rowsPerPage - displayedRows.length;\r\n  const handlePageChange = (event, newPage) => {\r\n    setController({\r\n      ...controller,\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setController({\r\n      ...controller,\r\n      rowsPerPage: parseInt(event.target.value, 10),\r\n      page: 0,\r\n    });\r\n  };\r\n  return (\r\n    <Paper>\r\n      <SearchBar value={searchQuery} onChange={handleSearch} />\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Trips</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {passengersList.map((passenger) => (\r\n            <TableRow key={passenger._id}>\r\n              <TableCell>{passenger.name}</TableCell>\r\n              <TableCell>{passenger.trips}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        component=\"div\"\r\n        onPageChange={handlePageChange}\r\n        page={controller.page}\r\n        count={passengersCount}\r\n        rowsPerPage={controller.rowsPerPage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU/C,OAAO,SAASC,UAAUA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAQ,EAAE,CAAC;EAC3C;EACA;EACA,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAM;IAC9CmB,IAAI,EAAE,CAAC;IACPC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAS,EAAE,CAAC;EAC1D,MAAM,CAACuB,aAAa,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAQ,EAAE,CAAC;EAEvDa,EAAA,CAAAd,SAAS,CAAAc,EAAA,CAAC,MAAM;IAAAA,EAAA;IACdd,SAAS,CAAC,MAAM;MACd,MAAM0B,OAAO,GAAG,MAAAA,CAAA,KAAY;QAC1B,MAAMC,GAAG,GAAI,qDAAoDC,UAAU,CAACR,IAAK,SAAQQ,UAAU,CAACP,WAAY,EAAC;QACjH,IAAI;UACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;UACjC,IAAIE,QAAQ,CAACE,UAAU,KAAK,IAAI,EAAE;YAChC,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;YAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;YACjBI,iBAAiB,CAACJ,IAAI,CAACA,IAAI,CAAC;YAC5BK,kBAAkB,CAACL,IAAI,CAACM,eAAe,CAAC;UAC1C,CAAC,MAAM;YACL,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;UACnC;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;QACpB;MACF,CAAC;MACDd,OAAO,CAAC,CAAC;IACX,CAAC,EAAE,CAACE,UAAU,CAAC,CAAC;EAClB,CAAC,mCAAE,EAAE,CAAC;;EAEN;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMa,YAAY,GAAIC,WAAmB,IAAK;IAC5CnB,cAAc,CAACmB,WAAW,CAAC;IAC3B,MAAMC,YAAY,GAAG3B,IAAI,CAAC4B,MAAM,CAAEC,GAAG,IACnCA,GAAG,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,WAAW,CAACK,WAAW,CAAC,CAAC,CAC3D,CAAC;IACDtB,UAAU,CAACkB,YAAY,CAAC;EAC1B,CAAC;;EAED;EACA;EACA;EACA,MAAMM,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC3CC,aAAa,CAAC;MACZ,GAAGxB,UAAU;MACbR,IAAI,EAAE+B;IACR,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,uBAAuB,GAAIH,KAAK,IAAK;IACzCE,aAAa,CAAC;MACZ,GAAGxB,UAAU;MACbP,WAAW,EAAEiC,QAAQ,CAACJ,KAAK,CAACK,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC;MAC7CpC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;EACD,oBACET,OAAA,CAACJ,KAAK;IAAAkD,QAAA,gBACJ9C,OAAA,CAACF,SAAS;MAAC+C,KAAK,EAAElC,WAAY;MAACoC,QAAQ,EAAEjB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDnD,OAAA,CAACT,KAAK;MAAAuD,QAAA,gBACJ9C,OAAA,CAACN,SAAS;QAAAoD,QAAA,eACR9C,OAAA,CAACL,QAAQ;UAAAmD,QAAA,gBACP9C,OAAA,CAACP,SAAS;YAAAqD,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eAC3BnD,OAAA,CAACP,SAAS;YAAAqD,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACZnD,OAAA,CAACR,SAAS;QAAAsD,QAAA,EACPM,cAAc,CAACC,GAAG,CAAEC,SAAS,iBAC5BtD,OAAA,CAACL,QAAQ;UAAAmD,QAAA,gBACP9C,OAAA,CAACP,SAAS;YAAAqD,QAAA,EAAEQ,SAAS,CAACnB;UAAI;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACvCnD,OAAA,CAACP,SAAS;YAAAqD,QAAA,EAAEQ,SAAS,CAACC;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA,GAF3BG,SAAS,CAACE,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGlB,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACRnD,OAAA,CAACH,eAAe;MACd4D,SAAS,EAAC,KAAK;MACfC,YAAY,EAAEpB,gBAAiB;MAC/B7B,IAAI,EAAEQ,UAAU,CAACR,IAAK;MACtBkD,KAAK,EAAEC,eAAgB;MACvBlD,WAAW,EAAEO,UAAU,CAACP,WAAY;MACpCmD,mBAAmB,EAAEnB;IAAwB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ;AAACjD,GAAA,CAlGeD,UAAU;AAAA6D,EAAA,GAAV7D,UAAU;AAAA,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}