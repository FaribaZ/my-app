{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fzare\\\\OneDrive\\\\Documents\\\\GitHub\\\\table\\\\my-app\\\\src\\\\BasicTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BasicTable() {\n  _s();\n  const [rows, setRows] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [searchQuery]);\n  const fetchData = async () => {\n    try {\n      let url = \"http://localhost:8000/rows\";\n      if (searchQuery) {\n        url += `?search=${encodeURIComponent(searchQuery)}`;\n      }\n      const response = await fetch(url);\n      const data = await response.json();\n      setRows(data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const startIndex = page * rowsPerPage;\n  const endIndex = startIndex + rowsPerPage;\n  const displayedRows = rows.slice(startIndex, endIndex);\n  const emptyRows = rowsPerPage - displayedRows.length;\n  const handleSearch = searchVal => {\n    setSearchQuery(searchVal);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      value: searchQuery,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Dessert (100g serving)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Fat\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Carbs\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Protein\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: [displayedRows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            \"&:last-child td, &:last-child th\": {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.calories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.fat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.carbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.protein\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n          style: {\n            height: 53 * emptyRows\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicTable, \"QwiDrafHr5EILLQotXIr7p/TrzU=\");\n_c = BasicTable;\nvar _c;\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["React","useEffect","useState","Table","TableBody","TableCell","TableHead","TableRow","Paper","TablePagination","jsxDEV","_jsxDEV","BasicTable","_s","rows","setRows","page","setPage","rowsPerPage","setRowsPerPage","searchQuery","setSearchQuery","fetchData","url","encodeURIComponent","response","fetch","data","json","error","console","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","startIndex","endIndex","displayedRows","slice","emptyRows","length","handleSearch","searchVal","children","SearchBar","onChange","fileName","_jsxFileName","lineNumber","columnNumber","sx","minWidth","align","map","row","border","component","scope","name","calories","fat","carbs","protein","style","height","colSpan","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["C:/Users/fzare/OneDrive/Documents/GitHub/table/my-app/src/BasicTable.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\n\r\ninterface Row {\r\n  name: string;\r\n  calories: number;\r\n  fat: number;\r\n  carbs: number;\r\n  protein: number;\r\n}\r\n\r\nexport function BasicTable() {\r\n  const [rows, setRows] = useState<Row[]>([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [searchQuery]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      let url = \"http://localhost:8000/rows\";\r\n      if (searchQuery) {\r\n        url += `?search=${encodeURIComponent(searchQuery)}`;\r\n      }\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      setRows(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const startIndex = page * rowsPerPage;\r\n  const endIndex = startIndex + rowsPerPage;\r\n  const displayedRows = rows.slice(startIndex, endIndex);\r\n  const emptyRows = rowsPerPage - displayedRows.length;\r\n\r\n  const handleSearch = (searchVal: string) => {\r\n    setSearchQuery(searchVal);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <SearchBar value={searchQuery} onChange={handleSearch} />\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {displayedRows.map((row) => (\r\n            <TableRow\r\n              key={row.name}\r\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={5} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}